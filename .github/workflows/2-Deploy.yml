name: "2 - Deploy"
on:
  workflow_run:
    workflows: ["1 - Provisioning Environment"]
    branches: [main]
    types: 
      - completed
    

jobs:
    build:
        
        runs-on: ubuntu-latest
        env:
          DOCKER_REPOSITORY: richiebono
          IMAGE_NAME: k8s-test
          IMAGE_TAG: ${{github.run_number}}
          WORKING_DIRECTORY: .
          CLUSTER_NAME: bono-k8s-test
          CLUSTER_REGION: us-east-1

        defaults:
          run:
            shell: bash
            working-directory: ${{ env.WORKING_DIRECTORY }}

        steps:
        - name: Checkout Code
          uses: actions/checkout@v2

        - name: QEMU
          uses: docker/setup-qemu-action@v1

        - name: Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to DockerHub
          uses: docker/login-action@v1 
          with:
            username: ${{ env.DOCKER_REPOSITORY }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: Build Docker Image ${{ env.IMAGE_NAME }}
          run: docker build -t ${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -t ${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest .
          
        - name: Push Docker Image ${{ env.IMAGE_NAME }}
          run: docker push ${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}
        
        - name: Run Trivy Vulnerability Scanner
          uses: aquasecurity/trivy-action@master
          continue-on-error: true
          with:
            image-ref: 'docker.io/${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest'
            format: 'table'
            exit-code: '1'
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'MEDIUM,HIGH,CRITICAL'

        - name: Install kubectl
          uses: azure/setup-kubectl@v1
          with:
            version: 'v1.21.3'
          id: install

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.CLUSTER_REGION }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Update kube config
          run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }}

        - name: Deploy image to Amazon EKS
          run: |           
            kubectl apply -f ../k8s/${{ env.WORKING_DIRECTORY }}/deployment.yaml
            kubectl apply -f ../k8s/${{ env.WORKING_DIRECTORY }}/service.yaml 

        - name: List kube nodes
          run: kubectl get svc